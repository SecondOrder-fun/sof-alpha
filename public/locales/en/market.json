{
  "title": "Prediction Markets",
  "market": "Market",
  "markets": "Markets",
  "position": "Position",
  "positions": "Positions",
  "yourPositions": "Your Positions",
  "noPositions": "No positions yet",
  "placeBet": "Place Bet",
  "betAmount": "Bet Amount",
  "betOn": "Bet On",
  "betYes": "Bet YES",
  "betNo": "Bet NO",
  "odds": "Odds",
  "currentOdds": "Current Odds",
  "potentialPayout": "Potential Payout",
  "totalBets": "Total Bets",
  "yesPool": "YES Pool",
  "noPool": "NO Pool",
  "outcome": "Outcome",
  "winningOutcome": "Winning Outcome",
  "claimWinnings": "Claim Winnings",
  "winningsClaimed": "Winnings Claimed",
  "arbitrage": "Arbitrage",
  "arbitrageOpportunity": "Arbitrage Opportunity",
  "noArbitrageOpportunities": "No arbitrage opportunities",
  "profitability": "Profitability",
  "estimatedProfit": "Estimated Profit",
  "executeArbitrage": "Execute Arbitrage",
  "rewards": "Rewards",
  "yourRewards": "Your Rewards",
  "claimRewards": "Claim Rewards",
  "rewardsClaimed": "Rewards Claimed",
  "noRewards": "No rewards available",
  "settlement": "Settlement",
  "settlementStatus": "Settlement Status",
  "pending": "Pending",
  "resolved": "Resolved",
  "player": "Player",
  "winProbability": "Win Probability",
  "marketPrice": "Market Price",
  "rafflePrice": "Raffle Price",
  "priceDifference": "Price Difference",
  "winnerPrediction": "Winner Prediction",
  "settlementInProgress": "Settlement in progress. Please wait.",
  "settlementPending": "Waiting for settlement after raffle completion.",
  "marketResolved": "This market has been settled. If you have winning positions, you can claim your rewards.",
  "claimDescription": "Claimable raffle prizes and market winnings.",
  "chance": "Chance",
  "myYes": "My YES",
  "myNo": "My NO",
  "yes": "Yes",
  "no": "No",
  "amountSof": "Amount (SOF)",
  "submitting": "Submitting…",
  "placeYes": "Place YES",
  "placeNo": "Place NO",
  "claimingYes": "Claiming YES…",
  "claimYes": "Claim YES",
  "claimingNo": "Claiming NO…",
  "claimNo": "Claim NO",
  "claimSuccessful": "Claim Successful",
  "yesPayoutClaimed": "YES payout claimed. Tx: {{hash}}",
  "noPayoutClaimed": "NO payout claimed. Tx: {{hash}}",
  "claimFailed": "Claim Failed",
  "betConfirmed": "Bet Confirmed",
  "betDetails": "{{side}} {{amount}} SOF • Tx: {{hash}}",
  "tradeFailed": "Trade Failed",
  "transactionError": "Transaction error",
  "volume": "Vol.",
  "willWin": "win",
  "marketId": "Market ID: {{id}}",
  "infoFiMarkets": "InfoFi Markets",
  "betOnOutcomes": "Bet on outcomes and earn rewards!",
  "createNewMarket": "Create New Market",
  "createPredictionMarket": "Create a new prediction market",
  "raffleId": "Raffle ID",
  "enterRaffleId": "Enter raffle ID",
  "tokenAddress": "Token Address",
  "enterTokenAddress": "Enter token contract address",
  "question": "Question",
  "enterYesNoQuestion": "Enter yes/no question",
  "createMarket": "Create Market",
  "placeABet": "Place a bet on an existing market",
  "enterMarketId": "seasonId:MARKET_TYPE:subject (e.g., 1:WINNER_PREDICTION:-)",
  "prediction": "Prediction",
  "walletNotConnected": "Wallet not connected",
  "connectWalletToCreate": "Please connect your wallet to create a market.",
  "marketCreated": "Market Created",
  "marketCreatedSuccess": "Your InfoFi market has been created successfully.",
  "connectWalletToBet": "Please connect your wallet to place a bet.",
  "invalidMarketId": "Invalid Market ID",
  "invalidMarketIdDesc": "Please enter a canonical marketId like seasonId:MARKET_TYPE:subject.",
  "betPlaced": "Bet Placed",
  "betPlacedSuccess": "Successfully placed {{prediction}} bet of {{amount}} tokens.",
  "totalPool": "Total Pool",
  "yesOdds": "YES Odds",
  "noOdds": "NO Odds",
  "predictionMarketPositions": "Prediction Market Positions",
  "openPositionsAcross": "Open positions across InfoFi markets.",
  "connectWalletToView": "Connect wallet to view positions.",
  "loadingPositions": "Loading positions...",
  "errorLoadingPositions": "Error loading positions: {{error}}",
  "noOpenPositions": "No open positions found.",
  "subtotal": "Subtotal",
  "marketType": "Market Type",
  "debugDiscovery": "Debug: Discovery",
  "network": "Network",
  "marketsFound": "Markets found",
  "arbitrageOpportunities": "Arbitrage Opportunities",
  "live": "Live",
  "updated": "Updated",
  "scanningForOpportunities": "Scanning for opportunities...",
  "failedToDetectOpportunities": "Failed to detect opportunities",
  "noOpportunitiesDetected": "No opportunities detected",
  "arbitrageDescription": "Arbitrage opportunities appear when there's a price discrepancy between raffle entry costs and prediction market prices.",
  "minimumThreshold": "Minimum threshold: {{percent}}% profit",
  "configurationRequired": "Configuration required: seasonId and bondingCurveAddress must be provided",
  "raffleCost": "Raffle Cost",
  "spread": "Spread",
  "strategy": "Strategy",
  "raffle": "Raffle",
  "estimatedProfitShort": "Est. profit",
  "arbitrageNote": "Arbitrage execution is not yet implemented. These opportunities are for informational purposes only. Always verify prices and consider gas costs before executing any trades.",
  "note": "Note",
  "liveHybridPrice": "Live Hybrid Price (bps model)",
  "hybrid": "Hybrid",
  "raffleProbShort": "Raffle Prob",
  "marketSentShort": "Market Sent.",
  "activeSeason": "Active Season",
  "activeMarkets": "Active Markets",
  "winnerPredictionCount": "Winner Prediction ({{count}})",
  "positionSizeCount": "Position Size ({{count}})",
  "behavioralCount": "Behavioral ({{count}})",
  "otherCount": "Other ({{count}})",
  "buyInfoFiPosition": "Buy InfoFi position at {{price}} SOF, exit raffle at {{exitPrice}} SOF",
  "buyRaffleTickets": "Buy raffle tickets at {{price}} SOF, sell InfoFi position at {{sellPrice}} SOF",
  "browseActiveMarkets": "Browse and trade on active prediction markets",
  "positionSize": "Position Size",
  "behavioral": "Behavioral",
  "other": "Other",
  "trade": "Trade",
  "playerHasNoPosition": "Player has no raffle position",
  "playerCannotWinUnlessReentry": "Cannot win unless they buy back in before season ends"
}
